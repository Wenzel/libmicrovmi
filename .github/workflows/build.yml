name: Build

on: [push, pull_request]

jobs:
  dummy:
    runs-on: ubuntu-latest

    steps:
      - name: install stable toolchain with clippy
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
      - uses: actions/checkout@v1
      - name: build Dummy driver
        uses: actions-rs/cargo@v1
        with:
          command: build
      - name: annotate commit with clippy warnings
        uses: actions-rs/clippy-check@v1
        with:
          name: clippy dummy
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -D warnings

  xen:
    runs-on: ubuntu-latest

    steps:
      - name: install Xen headers and libraries
        run: sudo apt-get install -y libxen-dev
      - name: install stable toolchain with clippy
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
      - uses: actions/checkout@v1
      - name: build Xen driver
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --features xen
      - name: annotate commit with clippy warnings
        uses: actions-rs/clippy-check@v1
        with:
          name: clippy xen
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --features xen -- -D warnings

  kvm:
    runs-on: ubuntu-latest

    steps:
      - name: install libkvmi
        run: |
          git clone https://github.com/KVM-VMI/kvm --branch kvmi --depth 1
          cd kvm/tools/kvm/kvmi
          make
          sudo make install
      - name: install stable toolchain with clippy
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
      - uses: actions/checkout@v1
      - name: build KVM driver
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --features kvm
      - name: annotate commit with clippy warnings
        uses: actions-rs/clippy-check@v1
        with:
          name: clippy kvm
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --features kvm -- -D warnings
      - name: remove compilation artifacts from stable toolchain
        uses: actions-rs/cargo@v1
        with:
          command: clean
      - name: install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: test KVM driver
        uses: actions-rs/cargo@v1
        with:
          command: test
          # The target arg is a workaround in order to prevent build.rs files from being compiled with RUSTFLAGS
          # -Cpanic=abort can lead to issues with bindgen during compile time
          args: --features kvm --no-fail-fast --target x86_64-unknown-linux-gnu
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
      - name: install grcov
        uses: actions-rs/install@v0.1
        with:
          crate: grcov
          version: latest
          use-tool-cache: true

  virtualbox:
    runs-on: ubuntu-latest

    steps:
      - name: clone Icebox repository
        run: git clone https://github.com/thalium/icebox --depth 1
      - name: Compile and install FDP library
        run: |
          cd icebox/src/FDP
          g++ -std=c++11 -shared -fPIC FDP.cpp -o libFDP.so
          sudo cp include/* /usr/local/include
          sudo cp libFDP.so /usr/local/lib
      - name: install stable toolchain with clippy
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
      - uses: actions/checkout@v1
      - name: build VirtualBox driver
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --features virtualbox
      - name: annotate commit with clippy warnings
        uses: actions-rs/clippy-check@v1
        with:
          name: clippy virtualbox
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --features virtualbox -- -D warnings

  hyper-v:
    runs-on: windows-latest

    steps:
      - name: install LLVM
        run: choco install llvm
      - name: install stable toolchain with clippy
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
      - uses: actions/checkout@v1
      - name: build Hyper-V driver
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --features hyper-v
      #- name: annotate commit with clippy warnings
      #  uses: actions-rs/clippy-check@v1
      #  with:
      #    name: clippy hyper-v
      #    token: ${{ secrets.GITHUB_TOKEN }}
      #    args: --features hyper-v -- -D warnings

  c_api:
    runs-on: ubuntu-latest

    steps:
      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: install cbindgen
        uses: actions-rs/install@v0.1
        with:
          crate: cbindgen
          version: latest
          use-tool-cache: true
      - uses: actions/checkout@v1
      - name: build libmicrovmi
        uses: actions-rs/cargo@v1
        with:
          command: build
      - name: build C API
        run: |
          cd c_examples
          make

  rustfmt:
    runs-on: ubuntu-latest

    steps:
      - name: install stable toolchain with rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
      - uses: actions/checkout@v1
      - name: rustfmt check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
